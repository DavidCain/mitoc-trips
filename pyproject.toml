[tool.black]
include = '\.py$'
# Don't attempt to normalize strings
# (Preserves the convention of "single quotes for data, double quotes for humans")
skip-string-normalization = true

[tool.isort]
profile = "black"

[tool.poetry]
name = "ws"
version = "0.1.0"
description = "The MIT Outing Club's trip management system"
license = "GPL-3.0"
readme = "README.md"
homepage = "https://mitoc-trips.mit.edu"
repository = "https://github.com/DavidCain/mitoc-trips/"
authors = ["David Cain <davidjosephcain@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.6.2"
Django = "^2.2"
PyJWT = ">= 2.0.0"  # 2.0.0 changed the return type of `jwt.encode()`
# 4.4.4 had a KeyError from the `future` module
# 5.0 drops support for the AMQP backend, which we currently use
celery = "> 4.4.4, <5.0"
python-dateutil = "*"  # TODO (Can remove once on Python 3.7)
django-allauth = "^0.41.0"  # See CVE-2019-19844
django-angular = "^2.1"
django-cors-headers = "*"
django-localflavor = "*"
django-phonenumber-field = { version = ">= 2.0", extras = ["phonenumberslite"] }
django-pipeline = "*"  # TODO: To eventually be replaced by webpack-loader
django-smtp-ssl = "*"
django-webpack-loader = "*"
gspread = "^3.0.1"
markdown2 = "*"
mitoc-const = "^1.0.0"  # (1.0.0 includes type hints)
mysqlclient = "^1.3.14"  # TODO: Delete once `util/geardb.py` is migrated
oauth2client = "*"
phonenumberslite = "*"
psycopg2-binary = "< 2.9"  # https://github.com/psycopg/psycopg2/issues/1293#issuecomment-862835147 TODO: Unpin once on Django 3.1
pwned-passwords-django = "^1.4"
requests = "*"
sentry-sdk = "*"

[tool.poetry.dev-dependencies]
beautifulsoup4 = "*"
black = { version = "*", allow-prereleases = true }
coverage = { version = "*" }
factory_boy = "*"
freezegun = "*"
isort = { version = "^5.8", extras = ["pyproject"] }  # Version 5 introduces black compatibility
lxml = "*"
pylint = "^2.8"
pytz = "*"  # (It's a production dependency by way of Django, but used directly in tests)

# Dependencies for static type checking
django-stubs = { url = "https://github.com/typeddjango/django-stubs/archive/397e3f3dacdd963995ae55600a376a9e69de563d.tar.gz" }  # Awaiting 1.9.0 release
mypy = { version = "*"}
types-certifi = { version = "*" }
types-cryptography = { version = "*" }
types-python-dateutil = { version = "*" }
types-pytz = { version = "*" }
types-requests = { version = "*" }

# Dependencies helpful for local development, not used otherwise
django-debug-toolbar = { version = "*" }
ipdb = { version = "*" }
jedi = { version = "<0.18.0" }  # https://github.com/ipython/ipython/issues/12740


[tool.mypy]
python_version = "3.6"
show_error_codes = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
# Explicitly ignore imports that do not have type hints or library stubs
# Periodically, it's worth checking in to see which of these may have types later!
# (After dropping support for Python versions before 3.5, it's easy to just type annotate directly
module = [
    "django_stubs_ext",  # TODO: revisit if we need this after 1.9.0 release

    "allauth.*",
    "bs4",
    "celery.*",
    "debug_toolbar",
    "djng.*",
    "factory.*",
    "freezegun",
    "gspread",
    "httplib2",
    "kombu.*",
    "localflavor.*",
    "markdown2",
    "oauth2client.*",
    "phonenumber_field.*",
    "phonenumbers",
    "pipeline.*",
    "pwned_passwords_django.*",

]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "ws.settings"


[tool.pylint.'MESSAGES CONTROL']
disable = [
  # Handled by black
  "format",

  # Handled by isort
  "ungrouped-imports",

  "arguments-differ",
  "fixme",
  "invalid-name",
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-public-methods",

  ################################
  # I might remove some of these #
  ################################
  "attribute-defined-outside-init",
  "duplicate-code",
  "no-member",
  "too-many-locals",

  ############################
  # I aspire to remove these #
  ############################
  "missing-docstring",
  "unused-argument",  # Currently quite common in method strings
]

[tool.pylint.REPORTS]
reports = false
score = false

[tool.pylint.FORMAT]
max-module-lines = 2000
