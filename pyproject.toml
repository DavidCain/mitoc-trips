[tool.black]
include = '\.py$'
# Don't attempt to normalize strings
# (Preserves the convention of "single quotes for data, double quotes for humans")
skip-string-normalization = true

[tool.isort]
profile = "black"

[tool.poetry]
name = "ws"
version = "0.1.0"
description = "The MIT Outing Club's trip management system"
license = "GPL-3.0"
readme = "README.md"
homepage = "https://mitoc-trips.mit.edu"
repository = "https://github.com/DavidCain/mitoc-trips/"
authors = ["David Cain <davidjosephcain@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10.0"
Django = "^3.2"
PyJWT = ">= 2.0.0"  # 2.0.0 changed the return type of `jwt.encode()`
beautifulsoup4 = "*"
celery = "^5.1"
django-allauth = ">= 0.41.0"  # See CVE-2019-19844
django-cors-headers = "*"
django-crispy-forms = "^1.12.0"
django-localflavor = "*"
django-phonenumber-field = { version = ">= 2.0", extras = ["phonenumberslite"] }
django-pipeline = "*"  # TODO: To eventually be replaced by webpack-loader
django-smtp-ssl = "*"
django-webpack-loader = "^1.1.0"  # Should maintain parity with frontend/package.json
gspread = "*"
markdown2 = "*"
mitoc-const = "^1.0.0"  # (1.0.0 includes type hints)
phonenumberslite = "*"
psycopg2 = "*"
pwned-passwords-django = "^1.6"  # Awaiting new release to fix ValueError
requests = "*"
sentry-sdk = "^1.3.1"

[tool.poetry.dev-dependencies]
black = "*"
coverage = { version = "*" }
factory_boy = "*"
freezegun = "*"
isort = { version = "^5.8", extras = ["pyproject"] }  # Version 5 introduces black compatibility
lxml = "*"
pylint = "^2.8"
pytest = "*"
pytest-django = "*"
pytest-socket = "*"
responses = "*"

# Dependencies for static type checking
django-stubs = { version = "^1.9" }
mypy = { version = "*"}
types-certifi = { version = "*" }
types-cryptography = { version = "*" }
types-requests = { version = "*" }

# Dependencies helpful for local development, not used otherwise
django-debug-toolbar = { version = "*" }
ipdb = { version = "*" }
jedi = { version = "*" }


[tool.mypy]
python_version = "3.10"
plugins = ["mypy_django_plugin.main"]

# Better errors
pretty = true
show_error_codes = true
show_column_numbers = true

# Miscellaneous stricter settings
no_implicit_optional = true
strict_concatenate = true
strict_equality = true
strict_optional = true # (true by default)
warn_no_return = true # (true by default)
warn_unreachable = true
warn_unused_ignores = true

# Aspirational settings (can't turn on yet)
#disallow_untyped_defs = true
#disallow_incomplete_defs = true
#check_untyped_defs = true

# Settings that are way too strict for use with Django
#warn_return_any = true
#disallow_subclassing_any = true

[[tool.mypy.overrides]]
# Explicitly ignore imports that do not have type hints or library stubs
# Periodically, it's worth checking in to see which of these may have types later!
# (After dropping support for Python versions before 3.5, it's easy to just type annotate directly
module = [
    "allauth.*",
    "bs4",
    "celery.*",
    "debug_toolbar",
    "factory.*",
    "freezegun",
    "google.oauth2.*",
    "gspread",
    "kombu.*",
    "localflavor.*",
    "markdown2",
    "phonenumber_field.*",
    "phonenumbers",
    "pipeline.*",
    "pwned_passwords_django.*",

]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "ws.settings"


[tool.pylint.'MESSAGES CONTROL']
disable = [
  # Handled by black
  "format",

  # Handled by isort
  "ungrouped-imports",

  "arguments-differ",
  "fixme",
  "invalid-name",
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-public-methods",

  ################################
  # I might remove some of these #
  ################################
  "attribute-defined-outside-init",
  "duplicate-code",
  "no-member",
  "too-many-locals",

  ############################
  # I aspire to remove these #
  ############################
  "missing-docstring",
  "unused-argument",  # Currently quite common in method strings
]

[tool.pylint.REPORTS]
reports = false
score = false

[tool.pylint.FORMAT]
max-module-lines = 2000


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "ws.settings"
filterwarnings = [
    "error",
    "ignore:SelectableGroups dict interface is deprecated:DeprecationWarning",
]
